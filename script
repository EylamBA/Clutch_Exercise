import requests
import time 

#GitHub Url that works with the API
GITHUB_API_URL = "https://api.github.com/user"
GITHUB_PAT_FILE = "GITHUB_PAT.txt"

OKTA_DOMAIN = ""
OKTA_API_TOKEN = ""
GROUP_NAME = 'Clutch'

def getGitHubUserDataUsingPAT():
    """
    The function get the PATS from the PATS file and get the data of each user from it PAT
    """

    # getting the PAT from the file
    PATs = []
    pats_file = open("GITHUB_PAT.txt", "r")
    pats_lines = pats_file.readlines()
    for pat in pats_lines:
        pat = pat.rstrip('\n')
        PATs.append(pat)


    for pat in PATs:
        # cretaing the request of the data from the PAT
        headers = {
        "Authorization": f"token {pat}",
        "Accept": "application/vnd.github+json"
        }
        response = requests.get(GITHUB_API_URL, headers=headers)

        # parsing the data got from the request into json format
        user_data = response.json()

        #cretaing a file for each user that contains the information about the user
        login_data =  user_data["login"]
        output_filename = "GitHub-" + login_data
        with open(f"Data_Gathered\{output_filename}.txt", 'w') as f:
            f.write(f"PAT: {pat}\n")
            for key, value in user_data.items():
                f.write(f"{key}: {value}\n")
        
        print(f"Added GitHub data of {login_data}")
        time.sleep(0.5)


def getOktaDetails():
    """
    Get the OKTA domain and the okta api token from the files
    """

    # declering the global varibles
    global OKTA_DOMAIN
    global OKTA_API_TOKEN

    # getting the okta domain from the okta data file
    okta_file = open("OKTA_DATA.txt", "r")
    okta_domain = okta_file.readline()
    okta_domain = okta_domain.split(" ")[1]
    OKTA_DOMAIN = f'https://{okta_domain}'

    # get the API token of the okta user from the token file
    tokens = {}
    tokens_file = open("TOKENS.txt", "r")
    tokens_lines = tokens_file.readlines()
    for line in tokens_lines:
        line = line.rstrip('\n')
        line = line.split(" ")
        tokens[line[0]] = line[1]
    
    OKTA_API_TOKEN = tokens["OKTA_API_TOKEN"]


def getGroupIdInOkta():
    """
    Get the Gruop ID of the users that also in i the GitHub organization

    Returns:
        string: the group id of the selected group
    """
    
    # The header of the request, containd the OKTA user API token
    headers = {
        'Authorization': f'SSWS {OKTA_API_TOKEN}',
        'Accept': 'application/json'
    }
    
    # do a get request of the group id and return it
    group_search_url = f'{OKTA_DOMAIN}/api/v1/groups?q={GROUP_NAME}'
    group_response = requests.get(group_search_url, headers=headers)
    groups = group_response.json()
    group_id = groups[0]['id']
    return group_id

def getUsersFromThegroup(group_id):
    # The header of the request, containd the OKTA user API token
    headers = {
        'Authorization': f'SSWS {OKTA_API_TOKEN}',
        'Accept': 'application/json'
    }

    # the request for the users
    group_users_url = f'{OKTA_DOMAIN}/api/v1/groups/{group_id}/users'
    users_list = []
    next_url = group_users_url

    while next_url:
        # parsing the response and adding it to the users list
        response = requests.get(next_url, headers=headers)
        users_list.extend(response.json())

        # cheking if there is another page of users
        if 'next' in response.links:
            next_url = response.links['next']['url']
        else:
            next_url = None
    
    return users_list

def writingTheDataToFiles(users_list):
    headers = {
        'Authorization': f'SSWS {OKTA_API_TOKEN}',
        'Accept': 'application/json'
    }

    for user in users_list:
        # create the folder name of the user
        uid = user['id']
        login = user['profile'].get('login', uid).replace('@', '_at_')
        filename = f'Okta-{login}.txt'
        lines = []

        # getting full user details
        r = requests.get(f'{OKTA_DOMAIN}/api/v1/users/{uid}', headers=headers);
        user_full = r.json()
        for key, value in user_full.items():
                lines.append(f"{key}: {value}")
        #lines.append(f"{user_full}\n")

        # getting assigned apps of teh user
        apps_url = f'{OKTA_DOMAIN}/api/v1/apps?filter=user.id+eq+"{uid}"'
        r = requests.get(apps_url, headers=headers);
        apps = r.json()
        for app in apps:
            for key, value in app.items():
                lines.append(f"{key}: {value}")
        #lines.append(f"{apps}\n")

        # Write to file
        with open(f"Data_Gathered\{filename}.txt", 'w') as f:
            f.write("\n".join(lines))
        
        print(f"Added Okta data of {login}")
        
        time.sleep(0.5)

def getOktaUsersData():
    """
    Getting the data of the OKTA users
    """
    getOktaDetails()
    group_id = getGroupIdInOkta()
    users_list = getUsersFromThegroup(group_id)
    writingTheDataToFiles(users_list)



def main():
    getGitHubUserDataUsingPAT()
    getOktaUsersData()


if __name__ == "__main__":
    main()